// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Thumanya.DataAccessLayer;

#nullable disable

namespace Thumanya.DataAccessLayer.Migrations
{
    [DbContext(typeof(CMSDbContext))]
    [Migration("20250615193927_AddingChannelTypeTable")]
    partial class AddingChannelTypeTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.17");

            modelBuilder.Entity("Thumanya.DataAccessLayer.DatabaseEntities.Auther", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfileImage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfileUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Authers");
                });

            modelBuilder.Entity("Thumanya.DataAccessLayer.DatabaseEntities.ChannelType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ChannelTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Podcast"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Video"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
